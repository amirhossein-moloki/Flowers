// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- Enums ---

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELED
}

enum NotificationChannel {
  PUSH
  SMS
  EMAIL
  IN_APP
}

enum NotificationStatus {
  PENDING
  SENT
  FAILED
  DELIVERED
  READ
}


// --- Application Models ---

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String?
  price       Float
  stock       Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id         String      @id @default(uuid())
  userId     String
  user       User        @relation(fields: [userId], references: [id])
  items      OrderItem[]
  status     OrderStatus @default(PENDING)
  total      Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float // Price at the time of purchase
}

model Address {
  id            String   @id @default(uuid())
  street        String
  city          String
  state         String
  zipCode       String
  country       String
  isResidential Boolean?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Courier {
  id          String   @id @default(uuid())
  name        String
  phone       String   @unique
  email       String   @unique
  vehicle     String?
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DriverLocation {
  id          String   @id @default(uuid())
  delivery_id String
  courier_id  String
  lat         Float
  lng         Float
  speed_kmh   Float
  heading_deg Float
  recorded_at DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notification {
  id           String             @id @default(uuid())
  user_id      String
  order_id     String
  channel      NotificationChannel
  template     String
  payload_json Json
  status       NotificationStatus @default(PENDING)
  sent_at      DateTime?
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
}

model CustomerAddress {
  id         String   @id @default(uuid())
  user_id    String
  address_id String
  is_default Boolean  @default(false)
  label      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model AutomationLog {
  id          String   @id @default(uuid())
  order_id    String
  action      String
  status      String
  message     String
  executed_at DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}